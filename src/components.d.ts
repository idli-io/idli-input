/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface IdliInput {
    /**
    * If true, the user cannot interact with the button. Defaults to `false`.
    */
    'disabled': boolean;
    /**
    * The input field label.
    */
    'label': string;
    'placeholder': string;
    /**
    * The button size. Possible values are: `"sm"`, `"md"`, `"lg"`. Defaults to `"md"`.
    */
    'size': 'sm' | 'md' | 'lg';
    /**
    * Button variants Possible values are `"text"`, `"email"`. Defaults to `"text"`.
    */
    'type': 'text' | 'email';
    'value': string;
  }
}

declare global {


  interface HTMLIdliInputElement extends Components.IdliInput, HTMLStencilElement {}
  var HTMLIdliInputElement: {
    prototype: HTMLIdliInputElement;
    new (): HTMLIdliInputElement;
  };
  interface HTMLElementTagNameMap {
    'idli-input': HTMLIdliInputElement;
  }
}

declare namespace LocalJSX {
  interface IdliInput {
    /**
    * If true, the user cannot interact with the button. Defaults to `false`.
    */
    'disabled'?: boolean;
    /**
    * The input field label.
    */
    'label'?: string;
    'onOnInput'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    /**
    * The button size. Possible values are: `"sm"`, `"md"`, `"lg"`. Defaults to `"md"`.
    */
    'size'?: 'sm' | 'md' | 'lg';
    /**
    * Button variants Possible values are `"text"`, `"email"`. Defaults to `"text"`.
    */
    'type'?: 'text' | 'email';
    'value'?: string;
  }

  interface IntrinsicElements {
    'idli-input': IdliInput;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'idli-input': LocalJSX.IdliInput & JSXBase.HTMLAttributes<HTMLIdliInputElement>;
    }
  }
}


